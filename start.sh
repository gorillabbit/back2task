#!/bin/bash
# Back2Task ‰∏ÄÊã¨Ëµ∑Âãï„Çπ„ÇØ„É™„Éó„Éà
set -e

# Ëâ≤‰ªò„Åç„É°„ÉÉ„Çª„Éº„Ç∏
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üéØ Back2Task Ëµ∑Âãï‰∏≠...${NC}"
echo "================================"

# „Éó„É≠„Ç∏„Çß„ÇØ„Éà„É´„Éº„ÉàÂèñÂæó
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

# ‰ªÆÊÉ≥Áí∞Â¢ÉÁ¢∫Ë™ç
if [[ ! -d "venv" ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  ‰ªÆÊÉ≥Áí∞Â¢É„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„ÄÇ„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó„ÇíÂÆüË°å‰∏≠...${NC}"
    python3 -m venv venv
    source venv/bin/activate
    pip install -r requirements.txt
else
    echo -e "${GREEN}‚úÖ ‰ªÆÊÉ≥Áí∞Â¢É„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åó„Åü${NC}"
fi

# ‰ªÆÊÉ≥Áí∞Â¢É„Çí„Ç¢„ÇØ„ÉÜ„Ç£„Éô„Éº„Éà
source venv/bin/activate

# PYTHONPATHË®≠ÂÆö
export PYTHONPATH="$SCRIPT_DIR"

# PID„Éï„Ç°„Ç§„É´„Éá„Ç£„É¨„ÇØ„Éà„É™‰ΩúÊàê
mkdir -p /tmp/back2task

# Êó¢Â≠ò„Éó„É≠„Çª„ÇπÁµÇ‰∫Ü
echo -e "${YELLOW}üßπ Êó¢Â≠ò„Éó„É≠„Çª„Çπ„Çí„ÉÅ„Çß„ÉÉ„ÇØ‰∏≠...${NC}"

# PID„Éï„Ç°„Ç§„É´„Åã„ÇâÊó¢Â≠ò„Éó„É≠„Çª„Çπ„ÇíÁµÇ‰∫Ü
if [[ -f "/tmp/back2task/api.pid" ]]; then
    API_PID=$(cat /tmp/back2task/api.pid)
    if ps -p "$API_PID" > /dev/null 2>&1; then
        echo "   Êó¢Â≠òAPI„Çµ„Éº„Éê„Éº„ÇíÂÅúÊ≠¢‰∏≠ (PID: $API_PID)"
        kill "$API_PID" 2>/dev/null || true
        sleep 2
    fi
    rm -f /tmp/back2task/api.pid
fi

if [[ -f "/tmp/back2task/pump.pid" ]]; then
    PUMP_PID=$(cat /tmp/back2task/pump.pid)
    if ps -p "$PUMP_PID" > /dev/null 2>&1; then
        echo "   Êó¢Â≠òEvent Pump„ÇíÂÅúÊ≠¢‰∏≠ (PID: $PUMP_PID)"
        kill "$PUMP_PID" 2>/dev/null || true
        sleep 2
    fi
    rm -f /tmp/back2task/pump.pid
fi

# „Éù„Éº„Éà5577„Çí„ÉÅ„Çß„ÉÉ„ÇØ
if lsof -ti:5577 > /dev/null 2>&1; then
    echo "   „Éù„Éº„Éà5577„Çí‰ΩøÁî®‰∏≠„ÅÆ„Éó„É≠„Çª„Çπ„ÇíÂÅúÊ≠¢‰∏≠..."
    lsof -ti:5577 | xargs kill -9 2>/dev/null || true
    sleep 2
fi

echo -e "${GREEN}‚úÖ „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„ÉóÂÆå‰∫Ü${NC}"

# 1. FastAPI „Çµ„Éº„Éê„ÉºËµ∑Âãï
echo -e "${BLUE}üöÄ FastAPI „Çµ„Éº„Éê„ÉºËµ∑Âãï‰∏≠...${NC}"
nohup uvicorn api.main:app --reload --port 5577 --host 127.0.0.1 \
    > /tmp/back2task/api.log 2>&1 & 
API_PID=$!
echo "$API_PID" > /tmp/back2task/api.pid

# „Çµ„Éº„Éê„ÉºËµ∑ÂãïÂæÖÊ©ü
echo "   „Çµ„Éº„Éê„ÉºËµ∑Âãï„ÇíÂæÖÊ©ü‰∏≠..."
for i in {1..30}; do
    if curl -s http://127.0.0.1:5577/status > /dev/null 2>&1; then
        echo -e "${GREEN}   ‚úÖ FastAPI „Çµ„Éº„Éê„ÉºËµ∑ÂãïÂÆå‰∫Ü (PID: $API_PID)${NC}"
        break
    fi
    sleep 1
    echo -n "."
done

if ! curl -s http://127.0.0.1:5577/status > /dev/null 2>&1; then
    echo -e "${RED}   ‚ùå FastAPI „Çµ„Éº„Éê„ÉºËµ∑ÂãïÂ§±Êïó${NC}"
    cat /tmp/back2task/api.log
    exit 1
fi

# 2. Event Pump Ëµ∑Âãï
echo -e "${BLUE}üëÄ Event Pump (Áõ£Ë¶ñ„Ç∑„Çπ„ÉÜ„É†) Ëµ∑Âãï‰∏≠...${NC}"
nohup python watchers/pump.py --api-url http://127.0.0.1:5577/events --interval 3.0 \
    > /tmp/back2task/pump.log 2>&1 &
PUMP_PID=$!
echo "$PUMP_PID" > /tmp/back2task/pump.pid

# Event PumpËµ∑ÂãïÁ¢∫Ë™ç
sleep 3
if ps -p "$PUMP_PID" > /dev/null 2>&1; then
    echo -e "${GREEN}   ‚úÖ Event Pump Ëµ∑ÂãïÂÆå‰∫Ü (PID: $PUMP_PID)${NC}"
else
    echo -e "${RED}   ‚ùå Event Pump Ëµ∑ÂãïÂ§±Êïó${NC}"
    cat /tmp/back2task/pump.log
    exit 1
fi

# 3. LLM„Çµ„Éº„Éê„Éº„ÉÅ„Çß„ÉÉ„ÇØÔºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
echo -e "${BLUE}ü§ñ LLM„Çµ„Éº„Éê„Éº„ÉÅ„Çß„ÉÉ„ÇØ‰∏≠...${NC}"
if curl -s http://localhost:8000/v1/models > /dev/null 2>&1; then
    echo -e "${GREEN}   ‚úÖ LLM„Çµ„Éº„Éê„ÉºÂà©Áî®ÂèØËÉΩ${NC}"
    LLM_STATUS="Âà©Áî®ÂèØËÉΩ"
else
    echo -e "${YELLOW}   ‚ö†Ô∏è  LLM„Çµ„Éº„Éê„Éº„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„ÇìÔºà„É´„Éº„É´„Éô„Éº„ÇπÂà§ÂÆö„ÅßÂãï‰ΩúÔºâ${NC}"
    LLM_STATUS="„Å™„Åó"
fi

# Ëµ∑ÂãïÂÆå‰∫Ü
echo ""
echo -e "${GREEN}üéâ Back2Task Ëµ∑ÂãïÂÆå‰∫ÜÔºÅ${NC}"
echo "================================"
echo -e "${BLUE}üìä „Çµ„Éº„Éì„ÇπÁä∂ÊÖã:${NC}"
echo "   ‚Ä¢ API „Çµ„Éº„Éê„Éº: http://127.0.0.1:5577 (PID: $API_PID)"
echo "   ‚Ä¢ Event Pump: Áõ£Ë¶ñ‰∏≠ (PID: $PUMP_PID)"
echo "   ‚Ä¢ LLM „Çµ„Éº„Éê„Éº: $LLM_STATUS"
echo ""
echo -e "${BLUE}üéÆ ‰ΩøÁî®ÊñπÊ≥ï:${NC}"
echo "   ‚Ä¢ „Çø„Çπ„ÇØÈñãÂßã: curl -X POST http://127.0.0.1:5577/focus/start -H 'Content-Type: application/json' -d '{\"task_id\":\"work\",\"minutes\":25}'"
echo "   ‚Ä¢ Áä∂ÊÖãÁ¢∫Ë™ç: curl http://127.0.0.1:5577/status"
echo "   ‚Ä¢ „É≠„Ç∞Á¢∫Ë™ç: tail -f /tmp/back2task/*.log"
echo "   ‚Ä¢ ÂÅúÊ≠¢: ./stop.sh"
echo ""
echo -e "${BLUE}üìÅ „É≠„Ç∞„Éï„Ç°„Ç§„É´:${NC}"
echo "   ‚Ä¢ API: /tmp/back2task/api.log"
echo "   ‚Ä¢ Event Pump: /tmp/back2task/pump.log"
echo ""

# Áä∂ÊÖãÁõ£Ë¶ñ„É´„Éº„ÉóÔºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
if [[ "$1" == "--monitor" ]]; then
    echo -e "${YELLOW}üìä „É™„Ç¢„É´„Çø„Ç§„É†Áõ£Ë¶ñ„É¢„Éº„Éâ (Ctrl+C „ÅßÁµÇ‰∫Ü)${NC}"
    echo ""
    
    while true; do
        # API „Çµ„Éº„Éê„ÉºÁä∂ÊÖãÁ¢∫Ë™ç
        if curl -s http://127.0.0.1:5577/status > /dev/null 2>&1; then
            API_STATUS="üü¢"
        else
            API_STATUS="üî¥"
        fi
        
        # Event PumpÁä∂ÊÖãÁ¢∫Ë™ç
        if ps -p "$PUMP_PID" > /dev/null 2>&1; then
            PUMP_STATUS="üü¢"
        else
            PUMP_STATUS="üî¥"
        fi
        
        # ÁèæÂú®„ÅÆ„Çø„Çπ„ÇØÁä∂ÊÖãÂèñÂæó
        TASK_INFO=""
        if STATUS_JSON=$(curl -s http://127.0.0.1:5577/status 2>/dev/null); then
            if echo "$STATUS_JSON" | grep -q '"current_task"'; then
                TASK_ID=$(echo "$STATUS_JSON" | grep -o '"id":"[^"]*"' | cut -d'"' -f4)
                ACCUM=$(echo "$STATUS_JSON" | grep -o '"accum":[0-9]*' | cut -d':' -f2)
                GOAL=$(echo "$STATUS_JSON" | grep -o '"goal":[0-9]*' | cut -d':' -f2)
                PRODUCTIVE=$(echo "$STATUS_JSON" | grep -o '"productive":[^,]*' | cut -d':' -f2)
                
                if [[ -n "$TASK_ID" && "$TASK_ID" != "null" ]]; then
                    PROGRESS=$((ACCUM * 100 / GOAL))
                    PROD_ICON=$([ "$PRODUCTIVE" = "true" ] && echo "‚úÖ" || echo "‚ö†Ô∏è")
                    TASK_INFO="| „Çø„Çπ„ÇØ: $TASK_ID ($PROGRESS%) $PROD_ICON"
                fi
            fi
        fi
        
        printf "\r%s API: %s Event Pump: %s %s" "$(date '+%H:%M:%S')" "$API_STATUS" "$PUMP_STATUS" "$TASK_INFO"
        sleep 2
    done
else
    echo -e "${GREEN}‚ú® Back2Task „ÅåÂãï‰Ωú‰∏≠„Åß„Åô„ÄÇÂÅúÊ≠¢„Åô„Çã„Å´„ÅØ './stop.sh' „ÇíÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ${NC}"
fi